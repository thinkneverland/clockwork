name: Release Quality Checks

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Check code style
        run: composer cs:check

      - name: Run static analysis
        run: composer analyze

      - name: Run tests
        run: composer test

      - name: Check for security vulnerabilities
        run: composer security:check

  compatibility:
    name: PHP / Laravel Compatibility
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2]
        laravel: [10.*, 11.*]
        exclude:
          - php: 8.1
            laravel: 11.*

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install dependencies
        run: |
          composer require "illuminate/support:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --prefer-dist --no-interaction --no-progress

      - name: Run tests
        run: composer test

  prepare-release:
    name: Prepare Release
    needs: [quality-checks, compatibility]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Build documentation
        run: |
          echo "Building documentation..."
          # Future: Add documentation build process here
      
      - name: Prepare release artifacts
        run: |
          echo "Creating release assets..."
          # Create release zip file
          zip -r tapped-${{ github.ref_name }}.zip . -x ".git/*" -x ".github/*" -x "vendor/*" -x "node_modules/*"
      
      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-assets
          path: |
            tapped-${{ github.ref_name }}.zip
            CHANGELOG.md
            README.md
